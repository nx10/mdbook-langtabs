#[derive(Debug, Clone, PartialEq, Eq)]
pub enum ProgrammingLanguage {
    Apache,
    ArmAssembly,
    Bash,
    C,
    CoffeeScript,
    Cpp,
    CSharp,
    Css,
    D,
    Diff,
    Go,
    Handlebars,
    Haskell,
    Http,
    Ini,
    Java,
    JavaScript,
    Json,
    Julia,
    Kotlin,
    Less,
    Lua,
    Makefile,
    Markdown,
    Nginx,
    Nim,
    Nix,
    ObjectiveC,
    Perl,
    Php,
    PlainText,
    Properties,
    Python,
    R,
    Ruby,
    Rust,
    Scala,
    Scss,
    Shell,
    Sql,
    Swift,
    TypeScript,
    X86Assembly,
    Xml,
    Yaml,
    Unknown(String),
}

impl ProgrammingLanguage {
    pub fn from_str(lang: &str) -> Self {
        match lang.to_lowercase().as_str() {
            "apache" => Self::Apache,
            "armasm" => Self::ArmAssembly,
            "bash" => Self::Bash,
            "c" => Self::C,
            "coffeescript" => Self::CoffeeScript,
            "cpp" => Self::Cpp,
            "csharp" | "cs" => Self::CSharp,
            "css" => Self::Css,
            "d" => Self::D,
            "diff" => Self::Diff,
            "go" => Self::Go,
            "handlebars" | "hbs" => Self::Handlebars,
            "haskell" | "hs" => Self::Haskell,
            "http" => Self::Http,
            "ini" => Self::Ini,
            "java" => Self::Java,
            "javascript" | "js" => Self::JavaScript,
            "json" => Self::Json,
            "julia" => Self::Julia,
            "kotlin" | "kt" => Self::Kotlin,
            "less" => Self::Less,
            "lua" => Self::Lua,
            "makefile" | "make" => Self::Makefile,
            "markdown" | "md" => Self::Markdown,
            "nginx" => Self::Nginx,
            "nim" => Self::Nim,
            "nix" => Self::Nix,
            "objectivec" | "objc" => Self::ObjectiveC,
            "perl" | "pl" => Self::Perl,
            "php" => Self::Php,
            "plaintext" | "text" | "txt" => Self::PlainText,
            "properties" | "props" => Self::Properties,
            "python" | "py" => Self::Python,
            "r" => Self::R,
            "ruby" | "rb" => Self::Ruby,
            "rust" | "rs" => Self::Rust,
            "scala" => Self::Scala,
            "scss" => Self::Scss,
            "shell" | "sh" => Self::Shell,
            "sql" => Self::Sql,
            "swift" => Self::Swift,
            "typescript" | "ts" => Self::TypeScript,
            "x86asm" => Self::X86Assembly,
            "xml" => Self::Xml,
            "yaml" | "yml" => Self::Yaml,
            _ => Self::Unknown(lang.to_string()),
        }
    }

    pub fn to_identifier(&self) -> String {
        match self {
            Self::Apache => "apache",
            Self::ArmAssembly => "armasm",
            Self::Bash => "bash",
            Self::C => "c",
            Self::CoffeeScript => "coffeescript",
            Self::Cpp => "cpp",
            Self::CSharp => "csharp",
            Self::Css => "css",
            Self::D => "d",
            Self::Diff => "diff",
            Self::Go => "go",
            Self::Handlebars => "handlebars",
            Self::Haskell => "haskell",
            Self::Http => "http",
            Self::Ini => "ini",
            Self::Java => "java",
            Self::JavaScript => "javascript",
            Self::Json => "json",
            Self::Julia => "julia",
            Self::Kotlin => "kotlin",
            Self::Less => "less",
            Self::Lua => "lua",
            Self::Makefile => "makefile",
            Self::Markdown => "markdown",
            Self::Nginx => "nginx",
            Self::Nim => "nim",
            Self::Nix => "nix",
            Self::ObjectiveC => "objectivec",
            Self::Perl => "perl",
            Self::Php => "php",
            Self::PlainText => "plaintext",
            Self::Properties => "properties",
            Self::Python => "python",
            Self::R => "r",
            Self::Ruby => "ruby",
            Self::Rust => "rust",
            Self::Scala => "scala",
            Self::Scss => "scss",
            Self::Shell => "shell",
            Self::Sql => "sql",
            Self::Swift => "swift",
            Self::TypeScript => "typescript",
            Self::X86Assembly => "x86asm",
            Self::Xml => "xml",
            Self::Yaml => "yaml",
            Self::Unknown(lang) => lang,
        }
        .to_string()
    }

    pub fn display_name(&self) -> String {
        match self {
            Self::Apache => "Apache".to_string(),
            Self::ArmAssembly => "ARM Assembly".to_string(),
            Self::Bash => "Bash".to_string(),
            Self::C => "C".to_string(),
            Self::CoffeeScript => "CoffeeScript".to_string(),
            Self::Cpp => "C++".to_string(),
            Self::CSharp => "C#".to_string(),
            Self::Css => "CSS".to_string(),
            Self::D => "D".to_string(),
            Self::Diff => "Diff".to_string(),
            Self::Go => "Go".to_string(),
            Self::Handlebars => "Handlebars".to_string(),
            Self::Haskell => "Haskell".to_string(),
            Self::Http => "HTTP".to_string(),
            Self::Ini => "INI".to_string(),
            Self::Java => "Java".to_string(),
            Self::JavaScript => "JavaScript".to_string(),
            Self::Json => "JSON".to_string(),
            Self::Julia => "Julia".to_string(),
            Self::Kotlin => "Kotlin".to_string(),
            Self::Less => "Less".to_string(),
            Self::Lua => "Lua".to_string(),
            Self::Makefile => "Makefile".to_string(),
            Self::Markdown => "Markdown".to_string(),
            Self::Nginx => "Nginx".to_string(),
            Self::Nim => "Nim".to_string(),
            Self::Nix => "Nix".to_string(),
            Self::ObjectiveC => "Objective-C".to_string(),
            Self::Perl => "Perl".to_string(),
            Self::Php => "PHP".to_string(),
            Self::PlainText => "Plain Text".to_string(),
            Self::Properties => "Properties".to_string(),
            Self::Python => "Python".to_string(),
            Self::R => "R".to_string(),
            Self::Ruby => "Ruby".to_string(),
            Self::Rust => "Rust".to_string(),
            Self::Scala => "Scala".to_string(),
            Self::Scss => "SCSS".to_string(),
            Self::Shell => "Shell".to_string(),
            Self::Sql => "SQL".to_string(),
            Self::Swift => "Swift".to_string(),
            Self::TypeScript => "TypeScript".to_string(),
            Self::X86Assembly => "x86 Assembly".to_string(),
            Self::Xml => "XML".to_string(),
            Self::Yaml => "YAML".to_string(),
            Self::Unknown(lang) => lang.clone(),
        }
    }

    pub fn icon_class(&self) -> String {
        match self {
            Self::Apache => "devicon-apache-plain",
            Self::ArmAssembly | Self::X86Assembly => "devicon-devicon-plain", // Generic icon fallback
            Self::Bash | Self::Shell => "devicon-bash-plain",
            Self::C => "devicon-c-plain",
            Self::CoffeeScript => "devicon-coffeescript-plain",
            Self::Cpp => "devicon-cplusplus-plain",
            Self::CSharp => "devicon-csharp-plain",
            Self::Css => "devicon-css3-plain",
            Self::D => "devicon-d3js-plain",
            Self::Diff => "devicon-git-plain",
            Self::Go => "devicon-go-plain",
            Self::Handlebars => "devicon-handlebars-plain",
            Self::Haskell => "devicon-haskell-plain",
            Self::Http => "devicon-chrome-plain",
            Self::Ini | Self::Properties => "devicon-devicon-plain",
            Self::Java => "devicon-java-plain",
            Self::JavaScript | Self::Json => "devicon-javascript-plain",
            Self::Julia => "devicon-julia-plain",
            Self::Kotlin => "devicon-kotlin-plain",
            Self::Less => "devicon-less-plain-wordmark",
            Self::Lua => "devicon-lua-plain",
            Self::Makefile => "devicon-linux-plain",
            Self::Markdown => "devicon-markdown-plain",
            Self::Nginx => "devicon-nginx-plain",
            Self::Nim => "devicon-nim-plain",
            Self::Nix => "devicon-nixos-plain",
            Self::ObjectiveC => "devicon-apple-plain",
            Self::Perl => "devicon-perl-plain",
            Self::Php => "devicon-php-plain",
            Self::PlainText => "devicon-devicon-plain",
            Self::Python => "devicon-python-plain",
            Self::R => "devicon-r-plain",
            Self::Ruby => "devicon-ruby-plain",
            Self::Rust => "devicon-rust-plain",
            Self::Scala => "devicon-scala-plain",
            Self::Scss => "devicon-sass-plain",
            Self::Sql => "devicon-mysql-plain",
            Self::Swift => "devicon-swift-plain",
            Self::TypeScript => "devicon-typescript-plain",
            Self::Xml => "devicon-html5-plain",
            Self::Yaml => "devicon-devicon-plain",
            Self::Unknown(_) => "devicon-devicon-plain",
        }
        .to_string()
    }
}
